#
# $Id$
#
#   # conditional based on concurrent connections (more than 9 concurrent connections)
#   SetEnvIf                   QS_SrvConn   [0-9]{2,10}          QS_Cond=onloadonly
#   QS_CondLocRequestLimitMatch "^/cgi100/sleep.cgi" 7           onloadonly


INCLUDE scripts/ports


CLIENT 7

# 7 requests are always allowed
_REQ localhost $QS_PORT_BASE
__GET /cgi100/sleep.cgi?s=10 HTTP/1.1
__Host: localhost
__
_EXPECT . "200 OK"
_WAIT

END

# === MAIN CLIENT ===================
CLIENT

_SLEEP 1000

# 8 requests are allowed, if server has not more than 9 connections

_REQ localhost $QS_PORT_BASE
__GET /cgi100/sleep.cgi?s=1 HTTP/1.1
__Host: localhost
__User-Agent: main
__
_EXPECT . "200 OK"
_WAIT
_CLOSE

_SLEEP 3000

# 8 requests are NOT allowed, if server has more than 9 connections

_REQ localhost $QS_PORT_BASE
__GET /cgi100/sleep.cgi?s=1 HTTP/1.1
__Host: localhost
__User-Agent: main
__
_EXPECT . "failed to serve your request"
_EXPECT . "code=011"
_EXPECT . "!200 OK"
_WAIT

END

CLIENT

# 1 client to another location (so we start with total 8 connections))
_REQ localhost $QS_PORT_BASE
__GET /cgi/sleep.cgi?s=10 HTTP/1.1
__Host: localhost
__
_EXPECT . "200 OK"
_WAIT

END


CLIENT 4

_SLEEP 3000
# 4 client to another location (we have now 7 to /cgi/sleep100 + 1 to /cgi/sleep + 4 to /cgi/sleep
# => total 12 connections at 3sec
_REQ localhost $QS_PORT_BASE
__GET /cgi/sleep.cgi?s=7 HTTP/1.1
__Host: localhost
__
_EXPECT . "200 OK"
_WAIT

END

