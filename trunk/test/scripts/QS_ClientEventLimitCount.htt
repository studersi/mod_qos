#
# $Id: QS_ClientEventLimitCount.htt,v 1.11 2014-06-18 19:05:54 pbuchbinder Exp $
#
#  QS_ClientEventLimitCount 3 10
#  QS_ClientIpFromHeader      Y-Forwarded-For
#
#  QS_SetEnvResHeaderMatch    X-Login           failed
#  QS_SetEnvIf                X-Login    !QSNOT QS_Limit=yes
#  QS_UnsetResHeader          X-Login
#
#
# ---
# OPTIONAL (enabled during this test):
#
#  QS_ClientEventLimitCount 6 5 QS_LimitVar2
#  QS_ClientEventLimitCount 100 600 QS_LimitVar3
#  QS_ClientEventLimitCount 100 600 QS_LimitVar4
#  QS_ClientEventLimitCount 1   600 QS_LimitVar5
#
#  QS_SetEnvIfQuery           QS_LimitVar2      QS_LimitVar2=yes
#  QS_SetEnvIfQuery           QS_LimitVar3      QS_LimitVar3=yes
#  QS_SetEnvIfQuery           QS_LimitVar3_Reset QS_LimitVar3_Clear=yes
#  QS_SetEnvIfQuery           QS_LimitVar4      QS_LimitVar4=yes
#  QS_SetEnvIf          MAXVAR3 MAXVAR4 QS_LimitVar5=max3and4
#   <Location /htt/soap>
#     SetEnvIfPlus      QS_LimitVar3_Counter 10 ForwardVar3 late
#     SetEnvIfPlus      QS_LimitVar3_Counter [23456789][0-9] ForwardVar3 late
#     RequestHeaderPlus set X-Var3 ${QS_LimitVar3_Counter} env=ForwardVar3 late
#     ResponseSetEnvIfPlus QS_Limit resetvar3 QS_LimitVar3_Clear=yes
#     # QS_LimitVar3>=10 AND QS_LimitVar4 >=10
#     SetEnvIfPlus      QS_LimitVar3_Counter [123456789][0-9] MAXVAR3 late
#     SetEnvIfPlus      QS_LimitVar4_Counter [123456789][0-9] MAXVAR4 late


INCLUDE scripts/ports

CLIENT

# 2 trigger for 10.10.10.1
_LOOP 2
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.1
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS1"
_WAIT
_CLOSE
_END LOOP

_REQ localhost $QS_PORT_BASE
__GET /dumpvar/ HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.1
__
_EXPECT . "QS_Limit_Counter=2"
_WAIT
_CLOSE

# 3 trigger for 10.10.10.2 => reaches limit
_LOOP 3
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS2"
_WAIT
_CLOSE
_END LOOP
_SLEEP 200

# 10.10.10.2 is now blocked
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "code=067"
_WAIT
_CLOSE
_SLEEP 200

_EXPECT EXEC "mod_qos\(067\): access denied, QS_ClientEventLimitCount rule: event=QS_Limit, max=3, current=3"
_EXEC tail -1 logs/error_log

_SET MSG_MISSINGHEADER=mod_qos\(069\): no valid IP header found .@hp.: header 'Y-Forwarded-For' not available, fallback to connection's IP 127.0.0.1
_SET MSG_MISSINGHEADER2=mod_qos\(069\): no valid IP header found .@hp.: invalid header value '10.10.10.5, 10.10.10.6', fallback to connection's IP 127.0.0.1
_EXPECT EXEC "!${MSG_MISSINGHEADER}"
_EXEC tail -3 logs/error_log
_EXPECT EXEC "!${MSG_MISSINGHEADER2}"
_EXEC tail -3 logs/error_log

# other clients still allowed
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.3
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS3"
_WAIT
_CLOSE

# release/expire limit
_SLEEP 12000
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS2"
_WAIT
_CLOSE

# missing Y-Forwarded-For header
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS4"
_WAIT
_CLOSE
_SLEEP 200
_EXPECT EXEC "${MSG_MISSINGHEADER}"
_EXEC tail -1 logs/error_log

# invalid Y-Forwarded-For header
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.5, 10.10.10.6
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS5"
_WAIT
_CLOSE
_SLEEP 200
_EXPECT EXEC "${MSG_MISSINGHEADER2}"
_EXEC tail -1 logs/error_log

# ----------------
# udpate config (change value): QS_ClientEventLimitCount 5 10
_EXEC sed "s:QS_ClientEventLimitCount 3:QS_ClientEventLimitCount 5:g" -i conf/httpd.conf
_SLEEP 100
_EXEC ./ctl.sh graceful >/dev/null
_SLEEP 100

_LOOP 4
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "!X-Login"
_EXPECT . "200"
_EXPECT . "AS6"
_WAIT
_CLOSE
_END LOOP
_SLEEP 200

# blocked after 5 requests (not 3 any longer)
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "code=067"
_WAIT
_CLOSE
_SLEEP 200
_EXPECT EXEC "mod_qos\(067\): access denied, QS_ClientEventLimitCount rule: event=QS_Limit, max=5, current=5"
_EXEC tail -1 logs/error_log
_SLEEP 12000

# expired
_REQ localhost $QS_PORT_BASE
__GET /htt/index1.html HTTP/1.1
__Host: localhost
__Connection: keep-alive
__Y-Forwarded-For: 10.10.10.2
__
_EXPECT . "AS07"
_WAIT
_CLOSE

# rollback change
_EXEC sed "s:QS_ClientEventLimitCount 5:QS_ClientEventLimitCount 3:g" -i conf/httpd.conf
_SLEEP 100
_EXEC ./ctl.sh graceful >/dev/null


# ----------------
# udpate config:
#  enable QS_ClientEventLimitCount 6 5 QS_LimitVar2
#  enable QS_ClientEventLimitCount 100 600 QS_LimitVar3
_EXEC sed "s:#QS_ClientEventLimitCount 6:QS_ClientEventLimitCount 6:g" -i conf/httpd.conf
_EXEC sed "s:#QS_ClientEventLimitCount 100:QS_ClientEventLimitCount 100:g" -i conf/httpd.conf
_EXEC sed "s:#QS_ClientEventLimitCount 1 :QS_ClientEventLimitCount 1 :g" -i conf/httpd.conf
_SLEEP 100
_EXEC ./ctl.sh graceful >/dev/null
_SLEEP 2000
# not allowed to add/remove a variable by sigusr1
_EXPECT EXEC "\[error\] mod_qos\(001\): QS_ClientEventLimitCount directives can't be added/removed by graceful restart. A server restart is required to apply the new configuration!"
_EXEC tail -10 logs/error_log

# apply new setting by restart
_EXEC ./ctl.sh restart -D real_ip > /dev/null

_LOOP 5
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar2 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP
# blocked by new rule
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar2 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "!<title>mod_qos</title>"
_EXPECT . "code=067"
_WAIT
_CLOSE
_SLEEP 6000

# ----------------
#      SetEnvIfPlus      QS_LimitVar3_Counter 10 ForwardVar3 late
#      RequestHeaderPlus set X-Var3 ${QS_LimitVar3_Counter} env=ForwardVar3 late

# req 1-8
_LOOP 8
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

# req 9
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS08"
_WAIT
_CLOSE

# req 10 (forwarded)
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS09"
_WAIT
_CLOSE

# req 11 (not forwarded)
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS10"
_WAIT
_CLOSE

# req 11-30
_LOOP 20
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

# req 32 (forwarded)
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS10b"
_WAIT
_CLOSE

# reset counter
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3_Reset HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS11"
_WAIT
_CLOSE

_LOOP 9
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__QS_LimitVar3_Clear: ignore me
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS12"
_WAIT
_CLOSE

# req 11-30
_LOOP 20
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger=QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

# reset by app server
_REQ localhost $QS_PORT_BASE
__GET /htt/soap/ HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS13"
_WAIT
_CLOSE

_REQ localhost $QS_PORT_BASE
__GET /htt/soap/?QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS14"
_WAIT
_CLOSE

# QS_LimitVar3>=10 AND QS_LimitVar4 >=10
# detected at response!
_LOOP 11
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger2=QS_LimitVar3 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

_LOOP 11
_REQ localhost $QS_PORT_BASE
__GET /qos/?trigger2=QS_LimitVar4 HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "<title>mod_qos</title>"
_WAIT
_CLOSE
_END LOOP

_REQ localhost $QS_PORT_BASE
__GET /dumpvar/ HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "QS_LimitVar3_Counter=12"
_EXPECT . "QS_LimitVar4_Counter=11"

_WAIT
_CLOSE

_REQ localhost $QS_PORT_BASE
__GET /htt/soap/ HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "AS15"
_WAIT
_CLOSE

_REQ localhost $QS_PORT_BASE
__GET /htt/soap/ HTTP/1.1
__Host: localhost
__Connection: keep-alive
__
_EXPECT . "code=067"
_WAIT
_CLOSE
_SLEEP 200
_EXPECT EXEC "mod_qos\(067\): access denied, QS_ClientEventLimitCount rule: event=QS_LimitVar5, max=1, current=1, age=[0-9]+, c=127.0.0.1"
_EXEC tail -1 logs/error_log

END

SERVER $QS_PORT_BASE6

_LOOP 2
_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS1==
_CLOSE
_END LOOP

_LOOP 3
_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS2==
_CLOSE
_END LOOP

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS3==
_CLOSE

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS2==
_CLOSE

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS4==
_CLOSE

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS5==
_CLOSE

_LOOP 4
_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__X-Login: failed
__
__==AS6==
_CLOSE
_END LOOP

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS07==
_CLOSE

_RES
_EXPECT . "!X-Var3"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS08==
_CLOSE

_RES
_EXPECT . "X-Var3: 10"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS09==
_CLOSE

_RES
_EXPECT . "!X-Var3"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS10==
_CLOSE

_RES
_EXPECT . "X-Var3: 32"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS10b==
_CLOSE

_RES
_EXPECT . "!X-Var3"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS11==
_CLOSE

_RES
_EXPECT . "X-Var3: 10"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS12==
_CLOSE

_RES
_EXPECT . "X-Var3: 30"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__QS_Limit: resetvar3
__
__==AS13==
_CLOSE

_RES
_EXPECT . "!X-Var3"
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS14==
_CLOSE

_RES
_WAIT
__HTTP/1.1 200 OK
__Content-Length: AUTO 
__Content-Type: text/html
__
__==AS15==
_CLOSE


END
